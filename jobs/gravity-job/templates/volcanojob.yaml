{{- if eq "Volcano" .Values.engine }}
apiVersion: batch.volcano.sh/v1alpha1
kind: Job
metadata:
  name: {{ .Values.name }}
spec:
  schedulerName: volcano
  policies:
  - event: PodEvicted
    action: RestartJob
  plugins:
    ssh: []
    env: []
    svc: []
  queue: {{ .Values.task.options.queue.value }}
  tasks:
  - name: {{ .Values.name }}
    replicas: {{ .Values.task.options.minAvailable.value }}
    maxRetry: {{ .Values.task.options.maxRetry.value }}
    template:
      spec:
        containers:
        - image: {{ .Values.task.image.name }}:{{ .Values.task.image.tag }}
          imagePullPolicy: Always
          {{- if .Values.task.args }}
          command:
          {{- range $a := .Values.task.args }}
          - {{ $a }}
          {{- end }}
          {{- end }}
          name: {{ .Values.name }}
          resources:
            requests:
              cpu: {{ .Values.task.capacity.resources.requests.cpu }}
              memory: {{ .Values.task.capacity.resources.requests.memory }}
          # env    
          env:
          #env
          {{- range $key, $val := .Values.task.env }}
          - name: {{ $key }}
            value: {{ $val }}
          {{- end }}
          #configs
          {{- range $index, $entry := .Values.configs }}
          {{- range $ei, $env := $entry.spec.env }}
          - name: {{ $env.name }}
            valueFrom:
              configMapKeyRef:
                  name: {{ $entry.id }}
                  key: {{ $env.key }}
          {{- end }}
          {{- range $vi, $vol := $entry.spec.volumes }}
          {{- if $vol.envName }}
          - name: {{ $vol.envName }}
            {{- if $vol.fileName }}
            value: "{{ $vol.mountPath }}/{{ $vol.fileName }}"
            {{- else }}
            value: "{{ $vol.mountPath }}/{{ $entry.spec.ref.name }}-{{ $vi }}"
            {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          # secrets
          {{- range $index, $entry := .Values.secrets }}
          {{- range $ei, $env := $entry.spec.env }}
          - name: {{ $env.name }}
            valueFrom:
              secretKeyRef:
                name: {{ $entry.id }}-env
                key: {{ $env.key }}
          {{- end }}
          {{- range $vi, $vol := $entry.spec.volumes }}
          {{- if $vol.envName }}
          - name: {{ $vol.envName }}
            value: "{{ $vol.mountPath }}/{{ $vol.fileName }}"
          {{- end }}
          {{- end }}
          {{- end }}
          # connections (env & secrets)
          {{- range $index, $conn := .Values.connections }}
          {{- range $ei, $env := $conn.env }}
          - name: {{ $env.name }}
            value: "{{ $env.value }}"
          {{- end }}
          {{- if $conn.secrets }}
          {{- range $sei, $env := $conn.secrets.env }}
          - name: {{ $env.name }}
            valueFrom:
              secretKeyRef:
                name: {{ $conn.secrets.secretName }}
                key: {{ $env.key }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if .Values.volumes }}
          envFrom:
          {{- range $index, $entry := .Values.configs }}
          {{- range $index, $env := $entry.spec.envAll }}
          - configMapRef:
              name: {{ $entry.id }}
            {{- with $env.prefix }}
            prefix: {{ . }}
            {{- end }}
          {{- end }}
          {{- end }}
          {{- end }}
          volumeMounts:
          # configs
          {{- range $index, $entry := .Values.configs }}
          {{- range $vi, $vol := $entry.spec.volumes }}
          - name: {{ $entry.spec.ref.name }}-{{ $vi }}
            {{- if $vol.fileName }}
            mountPath: {{ $vol.mountPath }}/{{ $vol.fileName }}
            subPath: {{ $vol.fileName }}
            {{- else }}
            mountPath: {{ $vol.mountPath }}
            {{- end }}
            readOnly: true
          {{- end }}
          {{- end }}
          {{- range $i ,$vol := .Values.volumes }}
          - name: {{ $vol.spec.ref.name }}-{{$i}}
            mountPath: {{ $vol.spec.mountPath }}
          {{- end }}
          {{- end }}
        restartPolicy: OnFailure
        volumes:
        #volumes
        {{- if .Values.volumes }}
        {{- range $i ,$vol := .Values.volumes }}
        - persistentVolumeClaim: 
            claimName: {{ $vol.spec.ref.name }}
          name: {{ $vol.spec.ref.name }}-{{$i}}
        {{- end }}
        {{- end }}
        # configs
        {{- range $index, $entry := .Values.configs }}
        {{- range $vi, $vol := $entry.spec.volumes }}
        - name: {{ $entry.spec.ref.name }}-{{ $vi }}
          configMap:
            name: {{ $entry.id }}
            {{- if $vol.fileName }}
            items:
              - key: content
                path: {{ $vol.fileName }}
            {{- end }}
        {{- end }}
        {{- end }}
